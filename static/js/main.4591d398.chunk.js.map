{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","token","setToken","total","setTotal","loading","setLoading","fetchData","index","a","fetch","method","headers","Headers","Authorization","then","x","json","data","orders","useEffect","count","asyncFn","promises","i","push","Promise","all","values","listData","forEach","element","concat","map","item","bet_account_type","bet_amount","created_at","master_username","bet_type","replace","change","status","result","graphCSV","parse","fields","label","value","document","createElement","style","decodeURIComponent","csvA","Uint16Array","split","k","v","charCodeAt","blob","Blob","type","blobUrl","URL","createObjectURL","href","download","body","appendChild","click","awaitAll","className","onChange","val","placeholder","onClick","total_page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4591d398.chunk.js","sourcesContent":["import React from \"react\";\nimport { parse } from \"json2csv\";\nimport \"./App.css\";\n\nfunction App() {\n  const [token, setToken] = React.useState(\"\");\n  const [total, setTotal] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  const fetchData = async index => {\n    return fetch(\n      `https://api.emmbot.trade/members/orders?limit=20&page=${index}&type=member`,\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: token,\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        })\n      }\n    )\n      .then(x => x.json())\n      .then(json => {\n        // console.log(`json=${index + 1}=`, json.data.orders);\n        return json.data.orders;\n      });\n  };\n\n  function awaitAll(count, asyncFn) {\n    const promises = [];\n\n    for (let i = 0; i < count; ++i) {\n      promises.push(asyncFn(i + 1));\n    }\n\n    Promise.all(promises).then(values => {\n      let listData = [];\n      values.forEach(element => {\n        listData = listData.concat(element);\n      });\n\n      listData = listData.map(item => {\n        return {\n          bet_account_type: item.bet_account_type,\n          bet_amount: item.bet_amount,\n          created_at: item.created_at,\n          master_username: item.master_username,\n          bet_type: item.bet_type.replace(/<[^>]+>/g, \"\"),\n          change: item.change,\n          status: item.status,\n          result: item.change > 0 ? \"Thắng\" : \"Thua\"\n        };\n      });\n\n      let graphCSV = parse(listData, {\n        fields: [\n          { label: \"Thời gian\", value: \"created_at\" },\n          { label: \"Nguồn copy\", value: \"master_username\" },\n          { label: \"Số tiền\", value: \"bet_amount\" },\n          { label: \"Loại ví\", value: \"bet_account_type\" },\n          { label: \"Lệnh vào\", value: \"bet_type\" },\n          { label: \"Kết quả\", value: \"result\" },\n          { label: \"Lợi nhuận\", value: \"change\" },\n          { label: \"Trạng thái\", value: \"status\" }\n        ]\n      });\n\n      const a = document.createElement(\"a\");\n      a.style = \"display: none\";\n      // Data URI\n      const bom = decodeURIComponent(\"%EF%BB%BF\"); // \"\\uFEFF\\n\";\n      graphCSV = bom + graphCSV;\n      const csvA = new Uint16Array(\n        graphCSV.split(\"\").map(function(k, v) {\n          return k.charCodeAt(0);\n        })\n      );\n      const blob = new Blob([csvA], { type: \"text/csv;charset=UTF-16LE;\" });\n      const blobUrl = URL.createObjectURL(blob);\n      a.href = blobUrl;\n      a.download = \"emmbot.csv\";\n      document.body.appendChild(a);\n      a.click();\n\n      setLoading(false);\n    });\n  }\n\n  React.useEffect(() => {\n    if (total > 0) {\n      awaitAll(total, fetchData);\n    }\n  }, [total]);\n\n  const downloadData = () => {\n    setLoading(true);\n    fetch(\n      \"https://api.emmbot.trade/members/orders?limit=20&page=1&type=member\",\n      {\n        method: \"get\",\n        headers: new Headers({\n          Authorization: token,\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        })\n      }\n    )\n      .then(x => x.json())\n      .then(json => {\n        if (json.data.total) {\n          setTotal(json.data.total_page);\n        }\n      });\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h2>Nhập token</h2>\n          <input\n            type=\"text\"\n            onChange={val => setToken(val)}\n            value={token}\n            placeholder=\"Nhập token ở đây\"\n          ></input>\n          <button type=\"button\" onClick={downloadData}>\n            Tải file excel\n          </button>\n          {\n            loading && <div>Loading...</div>\n          }\n        </header>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}